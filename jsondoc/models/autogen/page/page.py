# generated by datamodel-codegen:
#   filename:  example.json
#   timestamp: 2024-08-15T07:20:03+00:00

from __future__ import annotations

from enum import Enum
from typing import List, Optional

from pydantic import AwareDatetime, BaseModel, ConfigDict
from typing_extensions import Literal


class Parent(BaseModel):
    model_config = ConfigDict(
        extra='forbid',
    )
    type: str
    page_id: Optional[str] = None


class CreatedBy(BaseModel):
    model_config = ConfigDict(
        extra='forbid',
    )
    object: Literal['user']
    id: str


class LastEditedBy(BaseModel):
    model_config = ConfigDict(
        extra='forbid',
    )
    object: Literal['user']
    id: str


class Type(Enum):
    emoji = 'emoji'


class Icon(BaseModel):
    model_config = ConfigDict(
        extra='forbid',
    )
    type: Type
    emoji: str


class Link(BaseModel):
    url: str


class Text(BaseModel):
    content: str
    link: Optional[Link] = None


class Annotations(BaseModel):
    bold: bool
    italic: bool
    strikethrough: bool
    underline: bool
    code: bool
    color: str


class TitleItem(BaseModel):
    type: Literal['text']
    text: Text
    annotations: Annotations
    plain_text: str
    href: Optional[str] = None


class Title(BaseModel):
    id: Optional[str] = None
    type: Literal['title'] = 'title'
    title: Optional[List[TitleItem]] = None


class Properties(BaseModel):
    model_config = ConfigDict(
        extra='forbid',
    )
    title: Optional[Title] = None


class Type1(Enum):
    paragraph = 'paragraph'
    to_do = 'to_do'
    bulleted_list_item = 'bulleted_list_item'
    numbered_list_item = 'numbered_list_item'
    code = 'code'
    column = 'column'
    column_list = 'column_list'
    divider = 'divider'
    equation = 'equation'
    heading_1 = 'heading_1'
    heading_2 = 'heading_2'
    heading_3 = 'heading_3'
    image = 'image'
    quote = 'quote'
    equation_1 = 'equation'
    table = 'table'
    table_row = 'table_row'
    toggle = 'toggle'


class Child(BaseModel):
    type: Type1


class Model(BaseModel):
    model_config = ConfigDict(
        extra='forbid',
    )
    object: Literal['page']
    id: str
    parent: Optional[Parent] = None
    created_time: AwareDatetime
    created_by: Optional[CreatedBy] = None
    last_edited_time: Optional[AwareDatetime] = None
    last_edited_by: Optional[LastEditedBy] = None
    icon: Optional[Icon] = None
    archived: Optional[bool] = None
    in_trash: Optional[bool] = None
    properties: Properties
    children: List[Child]
